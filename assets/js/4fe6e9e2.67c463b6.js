"use strict";(self.webpackChunkchangelog_jordanvoss_dev=self.webpackChunkchangelog_jordanvoss_dev||[]).push([[9863],{969:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var s=t(6347),r=t(4848);function a({fallback:e="/docs/glossary/glossary-index"}){const n=(0,s.W6)();return(0,r.jsx)("a",{href:e,onClick:t=>{t.preventDefault();const s=sessionStorage.getItem("prevAnchor");s?n.push(s):n.push(e)},style:{display:"inline-block",marginTop:"1rem"},children:"\u2b05 Back"})}},2357:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"glossary/type","title":"Type","description":"Definition:","source":"@site/docs/glossary/type.md","sourceDirName":"glossary","slug":"/glossary/datatype","permalink":"/glossary/datatype","draft":false,"unlisted":false,"editUrl":"https://github.com/jordanvoss/dev-journey-site/edit/main/docs/glossary/type.md","tags":[],"version":"current","frontMatter":{"id":"type","title":"Type","slug":"/glossary/datatype"}}');var r=t(4848),a=t(8453),i=t(969);const l={id:"type",title:"Type",slug:"/glossary/datatype"},o="Type",d={},c=[{value:"Detailed Explanation",id:"detailed-explanation",level:2},{value:"Example",id:"example",level:2},{value:"Related Terms",id:"related-terms",level:2}];function p(e){const n={a:"a",br:"br",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"type",children:"Type"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition:"}),(0,r.jsx)(n.br,{}),"\n","A category of data that determines the possible values and operations for a variable."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"detailed-explanation",children:"Detailed Explanation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A type defines the kind of data a variable or expression can hold."}),"\n",(0,r.jsx)(n.li,{children:"It determines valid operations and storage requirements."}),"\n",(0,r.jsx)(n.li,{children:"Types can be built-in (primitives) or user-defined (classes, structs, enums)."}),"\n",(0,r.jsx)(n.li,{children:"Type systems can be static or dynamic, strong or weak."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:'// Example: integer type vs string type\n// let number = 42; // integer type\n// let name = "Jordan"; // string type'}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"related-terms",children:"Related Terms"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/glossary/variable",children:"Variable"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/glossary/data-type",children:"Data Type"})}),"\n"]}),"\n",(0,r.jsx)(i.A,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);